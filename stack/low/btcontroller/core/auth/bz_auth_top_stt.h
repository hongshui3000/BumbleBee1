#ifndef _BZ_AUTH_TOP_STT_H_
#define _BZ_AUTH_TOP_STT_H_

#include "DataType.h"

/* This file is autogenerated by gen_fsm.py, don't edit it manually */

typedef enum _BZ_AUTH_SUPER_STATE
{
    UNAUTHENTICATED_DURING_CONN, // 0
    UNAUTHENTICATED,             // 1
    AUTHENTICATING_DURING_CONN,  // 2
    AUTHENTICATED_DURING_CONN,   // 3
    AUTHENTICATING,              // 4
    AUTHENTICATED,
    AUTHENTICATED_ENCRYPTING,
    AUTHENTICATED_CHANGING_KEY,
    AUTHENTICATED_UPGRADE_KEY,
    AUTHENTICATED_TEMP_AUTHENTICATING,
    ENCRYPTING_DURING_CONN,
    ENCRYPTED_DURING_CONN,
    ENCRYPTED,
    ENCRYPTED_CHANGING_KEY,
    ENCRYPTED_UPGRADE_KEY,
    ENCRYPTED_REFRESH_KEY,             //15
    ENCRYPTED_PAUSING_ENCRYPTION,
    ENCRYPTED_PAUSED,
    ENCRYPTED_RESUMING_ENCRYPTION,
    ENCRYPTED_DISABLING,
    ENCRYPTED_TEMP_ENCRYPTING,
    TEMP_AUTHENTICATED,
    TEMP_ENCRYPTED,
    TEMP_AUTHENTICATED_DISABLING_TEMP_KEY,
    TEMP_AUTHENTICATED_ENCRIPTING,
    TEMP_AUTHENTICATED_AUTHENTICATING,
    TEMP_ENCRYPTED_DISABLING_ENCRYPTION,
    TEMP_ENCRYPTED_DISABLING_TEMP_KEY,
    TEMP_ENCRYPTED_REFRESH_KEY,
    TEMP_ENCRYPTED_PAUSING_ENCRYPTION,
    TEMP_ENCRYPTED_PAUSED,
    TEMP_ENCRYPTED_RESUMING_ENCRYPTION,
    TEMP_ENCRYPTED_AUTHENTICATING,
    LAST_ENTRY_BZ_AUTH_SUPER_STATE
} BZ_AUTH_SUPER_STATE;

typedef enum _BZ_AUTH_SUPER_STATE_EVENT
{
    HCI_AUTH_REQ_OR_AURAND_INRAND_OR_IOCAP_REQ_AUTH_ENABLE,
    HCI_SET_ENC_OR_ENC_REQ_OR_AUTH_SUCC_ENC_ENABLED,
    HCI_CHANGE_CONN_LINK_KEY_LMP_UNIT_COMB_KEY,
    HCI_MLK_TEMP_OR_LMP_TEMP_RAND,
    HCI_MLK_SEMI_PER_OR_LMP_SEMI_PER_KEY,
    HCI_REFRESH_ENCRYPTION_KEY,
    PAUSE_ENCRYPTION_REQ,
    RESUMING_ENCRYPTION_REQ,
    AUTH_STATUS_SUCCESS,
    AUTH_STATUS_SUCCESS_WITH_SSP,
    AUTH_STATUS_FAILED,
    RESUMING_OR_START_ENC_STATUS_SUCCESS,
    RESUMING_OR_START_ENC_STATUS_FAILED,
    PAUSE_OR_STOP_ENC_STATUS_SUCCESS,
    PAUSE_OR_STOP_ENC_STATUS_FAILED,
    CONNECTION_COMPLETE_SUCCESS,
    LAST_ENTRY_BZ_AUTH_SUPER_STATE_EVENT
} BZ_AUTH_SUPER_STATE_EVENT;

extern const UINT8 bz_auth_next_super_state[
    LAST_ENTRY_BZ_AUTH_SUPER_STATE][LAST_ENTRY_BZ_AUTH_SUPER_STATE_EVENT];

#endif /* _BZ_AUTH_TOP_STT_H_ */

